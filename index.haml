!!!
%html
  %head
    %meta{ charset: 'utf-8' }/
    %meta{ content: 'width=device-width, initial-scale=1.0', name: 'viewport' }/
    %title HTML5 Audio Player for Zurb Foundation!
    %link{ href: './lib/css/foundation.min.css',
      rel: 'stylesheet', type: 'text/css' }/
    %link{ href: './lib/css/foundation-icons.css',
      rel: 'stylesheet', type: 'text/css' }/
    %link{ href: './dist/foundation-player.css',
      rel: 'stylesheet', type: 'text/css' }/
    %link{ href: './dist/demo.css', rel: 'stylesheet', type: 'text/css' }/
    -# Scripts
    %script{ src: './lib/js/jquery.min.js', type: 'text/javascript' }
    %script{ src: './lib/js/foundation.min.js', type: 'text/javascript' }
    %script{ src: './dist/foundation-player.js', type: 'text/javascript' }
    %script{ src: './dist/demo.js', type: 'text/javascript' }

  -# Long ULRs stored as local variables
  - project_url = 'https://github.com/sashaegorov/foundation-player'
  - gh_url = 'https://sashaegorov.github.io/foundation-player'
  - read_me = '/blob/master/README.md'
  - index = '/blob/master/index.html'

  -# Prerender Player markup
  - player = capture_haml do
    %ul.player.menu.simple.noselect
      %li.player-button.play
        %em.fi-music
      %li.player-button.rewind
        %em.fi-refresh
      %li.player-button.volume
        %em.fi-volume
      %li.player-status.time
        %span.elapsed 00:00
      %li.player-progress
        .progress.round{ role: 'progressbar' }
          .progress-meter.played
      %li.player-status.time
        %span.remains -00:00

  -# Prerender accordion with Player features description
  - sandbox = capture_haml do
    %ul.accordion{ 'data-accordion' => '',
      role: 'tablist', 'data-multi-expand' => 'true' }

      -# General info
      %li.accordion-item.is-active
        %a.accordion-title#info{ href: '#info', role: 'tab',
          'aria-controls' => 'info' } Intro
        .accordion-content#info{ 'aria-labelledby' => 'info',
          'data-tab-content' => '', role: 'tabpanel' }
          %p
            This is super easy way to bring HTML5 audio player
            to your Foundation based project. Take a look to
            %a{ href: project_url + read_me } README
            and the
            = succeed '.' do
              %a{ href: project_url + index } source of this page
            This tab is also sandbox for Foundation Player API.
            There is the
            %code player
            global variable. Fill free to experiment in your browser's
            JavaScript console.

      -# Playback info and methods
      %li.accordion-item
        %a.accordion-title#playback{ href: '#playback', role: 'tab',
          'aria-controls' => 'playback' } Playback control
        .accordion-content#playback{ 'aria-labelledby' => 'info',
          'data-tab-content' => '', role: 'tabpanel' }
          %table
            %thead
              %tr
                %th Method
                %th Description
                %th Returns
            %tbody
              %tr
                %td
                  %code playPause()
                %td
                  This method
                  %a{ onclick: 'player.playPause()' } toggles
                  play or pause state of player.
                %td
                  player object
              %tr
                %td
                  %code play()
                %td
                  %a{ onclick: 'player.play()' } Starts
                  player instance.
                %td
                  player object
              %tr
                %td
                  %code pause()
                %td
                  %a{ onclick: 'player.pause()' } Pauses
                  player.
                %td
                  player object
              %tr
                %td
                  %code seekToTime()
                %td
                  Seeks to exact position. Call
                  %code.nobr player.seekToTime('00:42')
                  to move to
                  = succeed '.' do
                    %a{ onclick: 'player.seekToTime(\'00:42\')' } 00:42
                %td
                  player object
              %tr
                %td
                  %code seekPercent()
                %td
                  Seeks to percentage. This code
                  %code.nobr player.seekPercent(0.5)
                  moves to
                  = succeed '.' do
                    %a{ onclick: 'player.seekPercent(0.5)' } 50%
                %td
                  player object
          %p
            Is's possible to use
            %code.nobr data-seek-to-percentage
            and
            %code.nobr data-seek-to-time
            attributes with links.
            In order to enable feature just passed
            %code.nobr {useSeekData: true}
            option to player.
          %p
            %strong NOTE:
            The player's instance which was initialized the
            latest will handle links in the document.
            Any player which was initialized before will
            not handle data links.
            This option is safer to use when there is
            only one player on the page.
          %p
            %code.nobr&= '<a data-seek-to-percentage=\'0.5\'>50%</a>'
            will create link which moves playhead to
            %a{ 'data-seek-to-percentage' => '0.5' } half
            position after clicking on it.
          %p
            %code.nobr&= '<a data-seek-to-time=\'00:42\'>00:42</a>'
            will create link which moves playhead to
            %a{ 'data-seek-to-time' => '00:42' } 00:42
            position after clicking.
          %p
            Please note default
            %code click
            action for links will be prevented.
      -# Volume control and methods
      %li.accordion-item
        %a.accordion-title#volume{ href: '#volume', role: 'tab',
          'aria-controls' => 'volume' } Volume control
        .accordion-content#volume{ 'aria-labelledby' => 'volume',
          'data-tab-content' => '', role: 'tabpanel' }
          %strong: TODO:
          Table with API...

      -# Look and feel section
      %li.accordion-item
        %a.accordion-title#look{ href: '#look', role: 'tab',
          'aria-controls' => 'look' } Look and feel
        .accordion-content#volume{ 'aria-labelledby' => 'look',
          'data-tab-content' => '', role: 'tabpanel' }
          %table
            %thead
              %tr
                %th Method
                %th Description
                %th Returns
            %tbody
              %tr
                %td
                  %code togglePlayerSize()
                %td
                  This method
                  %a{ onclick: 'player.togglePlayerSize()' } toggles
                  player size. Method returns current size of
                  player which was set.
                %td
                  %code 'small'
                  |
                  %code 'normal'
              %tr
                %td
                  %code.nobr setPlayerSize(size)
                %td
                  This method sets player size to one of possible values:
                  %code.nobr
                    = surround '\'' do
                      %a{ onclick: 'player.setPlayerSize(\'small\')' } small
                  or
                  %code.nobr
                    = surround '\'' do
                      %a{ onclick: 'player.setPlayerSize(\'normal\')' } normal
                  = '.'
                  Player has
                  %code 'normal'
                  size by default.
                %td
                  player object

      -# Sources
      %li.accordion-item
        %a.accordion-title#sources{ href: '#sources', role: 'tab',
          'aria-controls' => 'sources' } Audio sources
        .accordion-content#volume{ 'aria-labelledby' => 'sources',
          'data-tab-content' => '', role: 'tabpanel' }
          %h4 Source via attribute
          %code.nobr
            :escaped
              <audio src="http://.../podcast.m4a"></audio>
          %h4 Source via source
          %code.nobr
            :escaped
              <audio><source src="http://.../podcast.m4a"></audio>

  %body.foundation-player-demo
    .row
      %h2.text-center
        %em.fi-play
        Foundation-player.js

    .row
      .small-offset-0.small-12.medium-offset-2.medium-8.columns
        %ul.tabs.foundation-player-tab#players{ 'data-tabs' => '' }
          %li.tabs-title.is-active
            %a{ href: '#sandbox' } API Sandbox
          %li.tabs-title.foundation-player-normal
            %a{ href: '#normal' } Normal
          %li.tabs-title.foundation-player-small
            %a{ href: '#small' } Small
        -# Tabs
        .tabs-content{ 'data-tabs-content' => 'players' }
          .tabs-panel.is-active#sandbox
            .player-wrapper
              .foundation-player.no-1
                = player
                %audio
                  - url = "#{gh_url}/lib/audio/ukulele.m4a"
                  %source{ src: url }

            -# I know this is not good
            %br/
            = sandbox

          .tabs-panel#normal
            %p
              Regular player setup. There is no options here.
              %br/
              %code $('.foundation-player.no-2').foundationPlayer();
            .foundation-player.no-2
              = player
              %audio{ preload: 'none' }
                %source{ src: './lib/audio/climbing.m4a' }

          .tabs-panel#small
            %p
              Small player setup:
              %code.nobr { playerUISize: 'small' }
            .foundation-player.no-3
              = player
              %audio{ preload: 'none' }
                %source{ src: './lib/audio/acoustic-b.m4a' }

    .row
      %footer.footer
        %p.text-center.about
          %small
            Made with
            = succeed ',' do
              %em.fi-heart
            fun, keyboard andâ€¦ with
            %code 'single'
            quotes in source code.
